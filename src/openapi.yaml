openapi: 3.1.0
info:
  title: ZenStack Generated API
  version: 1.0.0
tags:
  - name: account
    description: Account operations
  - name: session
    description: Session operations
  - name: verificationToken
    description: VerificationToken operations
  - name: user
    description: User operations
  - name: organization
    description: Organization operations
  - name: userOrganization
    description: UserOrganization operations
  - name: project
    description: Project operations
  - name: agent
    description: Agent operations
  - name: database
    description: Database operations
  - name: backup
    description: Backup operations
  - name: restoration
    description: Restoration operations
  - name: settings
    description: Settings operations
components:
  schemas:
    Role:
      type: string
      enum:
        - pending
        - user
        - admin
    OrganizationRole:
      type: string
      enum:
        - member
        - admin
    Dbms:
      type: string
      enum:
        - postgresql
        - mysql
        - mongodb
    Status:
      type: string
      enum:
        - waiting
        - ongoing
        - failed
        - success
    TypeStorage:
      type: string
      enum:
        - local
        - s3
    AccountScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
    SessionScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - sessionToken
        - userId
        - expires
    VerificationTokenScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - identifier
        - token
        - expires
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - name
        - email
        - emailVerified
        - image
        - role
        - password
        - authMethod
        - deleted
    OrganizationScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - deleted
    UserOrganizationScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - userId
        - organizationId
        - role
    ProjectScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - isArchived
        - organizationId
    AgentScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - description
        - lastContact
    DatabaseScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - name
        - dbms
        - generatedId
        - description
        - backupPolicy
        - isWaitingForBackup
        - backupToRestore
        - agentId
        - lastContact
        - projectId
    BackupScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - status
        - file
        - databaseId
    RestorationScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - status
        - backupId
        - databaseId
    SettingsScalarFieldEnum:
      type: string
      enum:
        - id
        - createdAt
        - updatedAt
        - storage
        - name
        - s3EndPointUrl
        - s3AccessKeyId
        - s3SecretAccessKey
        - S3BucketName
        - smtpPassword
        - smtpFrom
        - smtpHost
        - smtpPort
        - smtpUser
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    Account:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - createdAt
        - userId
        - type
        - provider
        - providerAccountId
        - user
    Session:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"
      required:
        - id
        - createdAt
        - sessionToken
        - userId
        - expires
        - user
    VerificationToken:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - id
        - createdAt
        - identifier
        - token
        - expires
    User:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
        sessions:
          type: array
          items:
            $ref: "#/components/schemas/Session"
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganization"
      required:
        - id
        - createdAt
        - role
    Organization:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganization"
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
      required:
        - id
        - createdAt
        - slug
        - name
    UserOrganization:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        organizationId:
          type: string
        user:
          $ref: "#/components/schemas/User"
        organization:
          $ref: "#/components/schemas/Organization"
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - id
        - createdAt
        - userId
        - organizationId
        - user
        - organization
        - role
    Project:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organizationId:
          type: string
        organization:
          $ref: "#/components/schemas/Organization"
        databases:
          type: array
          items:
            $ref: "#/components/schemas/Database"
      required:
        - id
        - createdAt
        - slug
        - name
        - isArchived
        - organizationId
        - organization
    Agent:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        databases:
          type: array
          items:
            $ref: "#/components/schemas/Database"
      required:
        - id
        - createdAt
        - slug
        - name
    Database:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        agent:
          $ref: "#/components/schemas/Agent"
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        backups:
          type: array
          items:
            $ref: "#/components/schemas/Backup"
        restorations:
          type: array
          items:
            $ref: "#/components/schemas/Restoration"
        projectId:
          oneOf:
            - type: "null"
            - type: string
        project:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Project"
      required:
        - id
        - createdAt
        - name
        - dbms
        - generatedId
        - agentId
        - agent
    Backup:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          type: string
        database:
          $ref: "#/components/schemas/Database"
        restorations:
          type: array
          items:
            $ref: "#/components/schemas/Restoration"
      required:
        - id
        - createdAt
        - status
        - databaseId
        - database
    Restoration:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backupId:
          type: string
        backup:
          $ref: "#/components/schemas/Backup"
        databaseId:
          oneOf:
            - type: "null"
            - type: string
        database:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Database"
      required:
        - id
        - createdAt
        - status
        - backupId
        - backup
    Settings:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          $ref: "#/components/schemas/TypeStorage"
        name:
          type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
      required:
        - id
        - createdAt
        - storage
        - name
    AccountWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        userId:
          $ref: "#/components/schemas/SortOrder"
        type:
          $ref: "#/components/schemas/SortOrder"
        provider:
          $ref: "#/components/schemas/SortOrder"
        providerAccountId:
          $ref: "#/components/schemas/SortOrder"
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        scope:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    AccountWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        provider_providerAccountId:
          $ref: "#/components/schemas/AccountProviderProviderAccountIdCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    AccountScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableWithAggregatesFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    SessionWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        sessionToken:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    SessionWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        sessionToken:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
    SessionScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    VerificationTokenWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        identifier:
          $ref: "#/components/schemas/SortOrder"
        token:
          $ref: "#/components/schemas/SortOrder"
        expires:
          $ref: "#/components/schemas/SortOrder"
    VerificationTokenWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        identifier_token:
          $ref: "#/components/schemas/VerificationTokenIdentifierTokenCompoundUniqueInput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    VerificationTokenScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        identifier:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        token:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleFilter"
            - $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        authMethod:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        organizations:
          $ref: "#/components/schemas/UserOrganizationListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        image:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        role:
          $ref: "#/components/schemas/SortOrder"
        password:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        authMethod:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        deleted:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        accounts:
          $ref: "#/components/schemas/AccountOrderByRelationAggregateInput"
        sessions:
          $ref: "#/components/schemas/SessionOrderByRelationAggregateInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleFilter"
            - $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        authMethod:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountListRelationFilter"
        sessions:
          $ref: "#/components/schemas/SessionListRelationFilter"
        organizations:
          $ref: "#/components/schemas/UserOrganizationListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        emailVerified:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        image:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumRoleWithAggregatesFilter"
            - $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        authMethod:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableWithAggregatesFilter"
            - type: boolean
            - type: "null"
    OrganizationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        projects:
          $ref: "#/components/schemas/ProjectListRelationFilter"
        users:
          $ref: "#/components/schemas/UserOrganizationListRelationFilter"
    OrganizationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        slug:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        deleted:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        projects:
          $ref: "#/components/schemas/ProjectOrderByRelationAggregateInput"
        users:
          $ref: "#/components/schemas/UserOrganizationOrderByRelationAggregateInput"
    OrganizationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        slug:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        projects:
          $ref: "#/components/schemas/ProjectListRelationFilter"
        users:
          $ref: "#/components/schemas/UserOrganizationListRelationFilter"
    OrganizationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        deleted:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableWithAggregatesFilter"
            - type: boolean
            - type: "null"
    UserOrganizationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumOrganizationRoleFilter"
            - $ref: "#/components/schemas/OrganizationRole"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    UserOrganizationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        userId:
          $ref: "#/components/schemas/SortOrder"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        role:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
    UserOrganizationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        userId_organizationId:
          $ref: "#/components/schemas/UserOrganizationUserIdOrganizationIdCompoundUniqueI\
            nput"
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumOrganizationRoleFilter"
            - $ref: "#/components/schemas/OrganizationRole"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserScalarRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    UserOrganizationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumOrganizationRoleWithAggregatesFilter"
            - $ref: "#/components/schemas/OrganizationRole"
    ProjectWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isArchived:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
        databases:
          $ref: "#/components/schemas/DatabaseListRelationFilter"
    ProjectOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        slug:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        isArchived:
          $ref: "#/components/schemas/SortOrder"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        databases:
          $ref: "#/components/schemas/DatabaseOrderByRelationAggregateInput"
    ProjectWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        slug:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isArchived:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
        databases:
          $ref: "#/components/schemas/DatabaseListRelationFilter"
    ProjectScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        isArchived:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    AgentWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        databases:
          $ref: "#/components/schemas/DatabaseListRelationFilter"
    AgentOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        slug:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        databases:
          $ref: "#/components/schemas/DatabaseOrderByRelationAggregateInput"
    AgentWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        slug:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        databases:
          $ref: "#/components/schemas/DatabaseListRelationFilter"
    AgentScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
    DatabaseWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/DatabaseWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        dbms:
          oneOf:
            - $ref: "#/components/schemas/EnumDbmsFilter"
            - $ref: "#/components/schemas/Dbms"
        generatedId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        backupPolicy:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        backupToRestore:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        agentId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        agent:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarRelationFilter"
            - $ref: "#/components/schemas/AgentWhereInput"
        backups:
          $ref: "#/components/schemas/BackupListRelationFilter"
        restorations:
          $ref: "#/components/schemas/RestorationListRelationFilter"
        project:
          oneOf:
            - $ref: "#/components/schemas/ProjectNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: "null"
    DatabaseOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        name:
          $ref: "#/components/schemas/SortOrder"
        dbms:
          $ref: "#/components/schemas/SortOrder"
        generatedId:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        backupPolicy:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        isWaitingForBackup:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        backupToRestore:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        agentId:
          $ref: "#/components/schemas/SortOrder"
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        projectId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        agent:
          $ref: "#/components/schemas/AgentOrderByWithRelationInput"
        backups:
          $ref: "#/components/schemas/BackupOrderByRelationAggregateInput"
        restorations:
          $ref: "#/components/schemas/RestorationOrderByRelationAggregateInput"
        project:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
    DatabaseWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        generatedId:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/DatabaseWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        dbms:
          oneOf:
            - $ref: "#/components/schemas/EnumDbmsFilter"
            - $ref: "#/components/schemas/Dbms"
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        backupPolicy:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        backupToRestore:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        agentId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        agent:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarRelationFilter"
            - $ref: "#/components/schemas/AgentWhereInput"
        backups:
          $ref: "#/components/schemas/BackupListRelationFilter"
        restorations:
          $ref: "#/components/schemas/RestorationListRelationFilter"
        project:
          oneOf:
            - $ref: "#/components/schemas/ProjectNullableScalarRelationFilter"
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: "null"
    DatabaseScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        dbms:
          oneOf:
            - $ref: "#/components/schemas/EnumDbmsWithAggregatesFilter"
            - $ref: "#/components/schemas/Dbms"
        generatedId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        backupPolicy:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableWithAggregatesFilter"
            - type: boolean
            - type: "null"
        backupToRestore:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        agentId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    BackupWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/BackupWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        database:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarRelationFilter"
            - $ref: "#/components/schemas/DatabaseWhereInput"
        restorations:
          $ref: "#/components/schemas/RestorationListRelationFilter"
    BackupOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        status:
          $ref: "#/components/schemas/SortOrder"
        file:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        databaseId:
          $ref: "#/components/schemas/SortOrder"
        database:
          $ref: "#/components/schemas/DatabaseOrderByWithRelationInput"
        restorations:
          $ref: "#/components/schemas/RestorationOrderByRelationAggregateInput"
    BackupWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/BackupWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        database:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarRelationFilter"
            - $ref: "#/components/schemas/DatabaseWhereInput"
        restorations:
          $ref: "#/components/schemas/RestorationListRelationFilter"
    BackupScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    RestorationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestorationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        backup:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarRelationFilter"
            - $ref: "#/components/schemas/BackupWhereInput"
        database:
          oneOf:
            - $ref: "#/components/schemas/DatabaseNullableScalarRelationFilter"
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: "null"
    RestorationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        status:
          $ref: "#/components/schemas/SortOrder"
        backupId:
          $ref: "#/components/schemas/SortOrder"
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        backup:
          $ref: "#/components/schemas/BackupOrderByWithRelationInput"
        database:
          $ref: "#/components/schemas/DatabaseOrderByWithRelationInput"
    RestorationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestorationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        backup:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarRelationFilter"
            - $ref: "#/components/schemas/BackupWhereInput"
        database:
          oneOf:
            - $ref: "#/components/schemas/DatabaseNullableScalarRelationFilter"
            - $ref: "#/components/schemas/DatabaseWhereInput"
            - type: "null"
    RestorationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    SettingsWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SettingsWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SettingsWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SettingsWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        storage:
          oneOf:
            - $ref: "#/components/schemas/EnumTypeStorageFilter"
            - $ref: "#/components/schemas/TypeStorage"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        s3EndPointUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        s3AccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        s3SecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        S3BucketName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpPassword:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpFrom:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpHost:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpPort:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpUser:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    SettingsOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        storage:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        s3EndPointUrl:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        s3AccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        s3SecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        S3BucketName:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        smtpPassword:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        smtpFrom:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        smtpHost:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        smtpPort:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        smtpUser:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
    SettingsWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/SettingsWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SettingsWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SettingsWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsWhereInput"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        storage:
          oneOf:
            - $ref: "#/components/schemas/EnumTypeStorageFilter"
            - $ref: "#/components/schemas/TypeStorage"
        s3EndPointUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        s3AccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        s3SecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        S3BucketName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpPassword:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpFrom:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpHost:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpPort:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        smtpUser:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    SettingsScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableWithAggregatesFilter"
            - type: string
              format: date-time
            - type: "null"
        storage:
          oneOf:
            - $ref: "#/components/schemas/EnumTypeStorageWithAggregatesFilter"
            - $ref: "#/components/schemas/TypeStorage"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        s3EndPointUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        s3AccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        s3SecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        S3BucketName:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        smtpPassword:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        smtpFrom:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        smtpHost:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        smtpPort:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        smtpUser:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
    AccountCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutAccountsInput"
      required:
        - type
        - provider
        - providerAccountId
        - user
    AccountUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutAccountsNestedInput"
    AccountCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
      required:
        - userId
        - type
        - provider
        - providerAccountId
    AccountUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    SessionCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutSessionsInput"
      required:
        - sessionToken
        - expires
        - user
    SessionUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutSessionsNestedInput"
    SessionCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - userId
        - expires
    SessionUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    VerificationTokenCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    VerificationTokenCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - identifier
        - token
        - expires
    VerificationTokenUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        identifier:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationCreateNestedManyWithoutUserInput"
      required:
        - role
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUpdateManyWithoutUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
      required:
        - role
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
    OrganizationCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
        users:
          $ref: "#/components/schemas/UserOrganizationCreateNestedManyWithoutOrganization\
            Input"
      required:
        - slug
        - name
    OrganizationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
        users:
          $ref: "#/components/schemas/UserOrganizationUpdateManyWithoutOrganizationNested\
            Input"
    OrganizationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
      required:
        - slug
        - name
    OrganizationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
    UserOrganizationCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        role:
          $ref: "#/components/schemas/OrganizationRole"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrganizationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutUsersInput"
      required:
        - role
        - user
        - organization
    UserOrganizationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrganizationsNestedInpu\
            t"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutUsersNestedInpu\
            t"
    UserOrganizationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        organizationId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - userId
        - organizationId
        - role
    UserOrganizationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
    ProjectCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutProjectsInput"
        databases:
          $ref: "#/components/schemas/DatabaseCreateNestedManyWithoutProjectInput"
      required:
        - slug
        - name
        - organization
    ProjectUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutProjectsNestedI\
            nput"
        databases:
          $ref: "#/components/schemas/DatabaseUpdateManyWithoutProjectNestedInput"
    ProjectCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organizationId:
          type: string
      required:
        - slug
        - name
        - organizationId
    ProjectUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    AgentCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        databases:
          $ref: "#/components/schemas/DatabaseCreateNestedManyWithoutAgentInput"
      required:
        - slug
        - name
    AgentUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        databases:
          $ref: "#/components/schemas/DatabaseUpdateManyWithoutAgentNestedInput"
    AgentCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
      required:
        - slug
        - name
    AgentUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
    DatabaseCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        agent:
          $ref: "#/components/schemas/AgentCreateNestedOneWithoutDatabasesInput"
        backups:
          $ref: "#/components/schemas/BackupCreateNestedManyWithoutDatabaseInput"
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutDatabaseInput"
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutDatabasesInput"
      required:
        - name
        - dbms
        - generatedId
        - agent
    DatabaseUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        agent:
          $ref: "#/components/schemas/AgentUpdateOneRequiredWithoutDatabasesNestedInput"
        backups:
          $ref: "#/components/schemas/BackupUpdateManyWithoutDatabaseNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutDatabaseNestedInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutDatabasesNestedInput"
    DatabaseCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
      required:
        - name
        - dbms
        - generatedId
        - agentId
    DatabaseUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
    BackupCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        database:
          $ref: "#/components/schemas/DatabaseCreateNestedOneWithoutBackupsInput"
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutBackupInput"
      required:
        - database
    BackupUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        database:
          $ref: "#/components/schemas/DatabaseUpdateOneRequiredWithoutBackupsNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutBackupNestedInput"
    BackupCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          type: string
      required:
        - databaseId
    BackupUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    RestorationCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backup:
          $ref: "#/components/schemas/BackupCreateNestedOneWithoutRestorationsInput"
        database:
          $ref: "#/components/schemas/DatabaseCreateNestedOneWithoutRestorationsInput"
      required:
        - backup
    RestorationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        backup:
          $ref: "#/components/schemas/BackupUpdateOneRequiredWithoutRestorationsNestedInp\
            ut"
        database:
          $ref: "#/components/schemas/DatabaseUpdateOneWithoutRestorationsNestedInput"
    RestorationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backupId:
          type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
      required:
        - backupId
    RestorationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
    SettingsCreateInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          $ref: "#/components/schemas/TypeStorage"
        name:
          type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
      required:
        - name
    SettingsUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        storage:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/EnumTypeStorageFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        s3EndPointUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        s3AccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        s3SecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        S3BucketName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpPassword:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpHost:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpPort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpUser:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    SettingsCreateManyInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          $ref: "#/components/schemas/TypeStorage"
        name:
          type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
      required:
        - name
    SettingsUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        storage:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/EnumTypeStorageFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        s3EndPointUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        s3AccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        s3SecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        S3BucketName:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpPassword:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpFrom:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpHost:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpPort:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        smtpUser:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    IntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    UserScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    AccountProviderProviderAccountIdCompoundUniqueInput:
      type: object
      properties:
        provider:
          type: string
        providerAccountId:
          type: string
      required:
        - provider
        - providerAccountId
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    DateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    IntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    VerificationTokenIdentifierTokenCompoundUniqueInput:
      type: object
      properties:
        identifier:
          type: string
        token:
          type: string
      required:
        - identifier
        - token
    EnumRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleFilter"
    BoolNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolNullableFilter"
            - type: "null"
    AccountListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/AccountWhereInput"
        some:
          $ref: "#/components/schemas/AccountWhereInput"
        none:
          $ref: "#/components/schemas/AccountWhereInput"
    SessionListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/SessionWhereInput"
        some:
          $ref: "#/components/schemas/SessionWhereInput"
        none:
          $ref: "#/components/schemas/SessionWhereInput"
    UserOrganizationListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        some:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        none:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
    AccountOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    SessionOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    UserOrganizationOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    EnumRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
    BoolNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolNullableFilter"
    ProjectListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ProjectWhereInput"
        some:
          $ref: "#/components/schemas/ProjectWhereInput"
        none:
          $ref: "#/components/schemas/ProjectWhereInput"
    ProjectOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    EnumOrganizationRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/OrganizationRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
    OrganizationScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/OrganizationWhereInput"
        isNot:
          $ref: "#/components/schemas/OrganizationWhereInput"
    UserOrganizationUserIdOrganizationIdCompoundUniqueInput:
      type: object
      properties:
        userId:
          type: string
        organizationId:
          type: string
      required:
        - userId
        - organizationId
    EnumOrganizationRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/OrganizationRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/NestedEnumOrganizationRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    DatabaseListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/DatabaseWhereInput"
        some:
          $ref: "#/components/schemas/DatabaseWhereInput"
        none:
          $ref: "#/components/schemas/DatabaseWhereInput"
    DatabaseOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    EnumDbmsFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Dbms"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        not:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/NestedEnumDbmsFilter"
    AgentScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/AgentWhereInput"
        isNot:
          $ref: "#/components/schemas/AgentWhereInput"
    BackupListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/BackupWhereInput"
        some:
          $ref: "#/components/schemas/BackupWhereInput"
        none:
          $ref: "#/components/schemas/BackupWhereInput"
    RestorationListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/RestorationWhereInput"
        some:
          $ref: "#/components/schemas/RestorationWhereInput"
        none:
          $ref: "#/components/schemas/RestorationWhereInput"
    ProjectNullableScalarRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectWhereInput"
    BackupOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    RestorationOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    EnumDbmsWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Dbms"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        not:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/NestedEnumDbmsWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumDbmsFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumDbmsFilter"
    EnumStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Status"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        not:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/NestedEnumStatusFilter"
    DatabaseScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/DatabaseWhereInput"
        isNot:
          $ref: "#/components/schemas/DatabaseWhereInput"
    EnumStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Status"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        not:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/NestedEnumStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumStatusFilter"
    BackupScalarRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/BackupWhereInput"
        isNot:
          $ref: "#/components/schemas/BackupWhereInput"
    DatabaseNullableScalarRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseWhereInput"
    EnumTypeStorageFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TypeStorage"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        not:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
    EnumTypeStorageWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TypeStorage"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        not:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/NestedEnumTypeStorageWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
    UserCreateNestedOneWithoutAccountsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    NullableDateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    NullableIntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    UserUpdateOneRequiredWithoutAccountsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutAccountsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutAccountsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
    UserCreateNestedOneWithoutSessionsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    UserUpdateOneRequiredWithoutSessionsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutSessionsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutSessionsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
    AccountCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    UserOrganizationCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
    AccountUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
    SessionUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
    UserOrganizationUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
    EnumRoleFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/Role"
    NullableBoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: boolean
    AccountUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    UserOrganizationUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutUserInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutUserInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
    AccountUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/AccountCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AccountWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
    SessionUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/SessionCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/SessionWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
    UserOrganizationUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutUserInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutUserInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
    ProjectCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
    UserOrganizationCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                  nput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
    ProjectUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
    UserOrganizationUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                  nput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
    ProjectUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
    UserOrganizationUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                  nput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutOrganiz\
                  ationInput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutOrganiz\
                  ationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutOrganizat\
                ionInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutOrganizat\
                  ionInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
    ProjectUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
    UserOrganizationUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateOrConnectWithoutOrganizationI\
                  nput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpsertWithWhereUniqueWithoutOrganiz\
                  ationInput"
        createMany:
          $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateWithWhereUniqueWithoutOrganiz\
                  ationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutOrganizat\
                ionInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationUpdateManyWithWhereWithoutOrganizat\
                  ionInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
    UserCreateNestedOneWithoutOrganizationsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrganizationsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    OrganizationCreateNestedOneWithoutUsersInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutUsersInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutUsersInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    EnumOrganizationRoleFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/OrganizationRole"
    UserUpdateOneRequiredWithoutOrganizationsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrganizationsInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutOrganizationsInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationsInput"
    OrganizationUpdateOneRequiredWithoutUsersNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutUsersInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutUsersInput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutUsersInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutUsersInput"
    OrganizationCreateNestedOneWithoutProjectsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutProjectsInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    DatabaseCreateNestedManyWithoutProjectInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyProjectInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
    DatabaseUncheckedCreateNestedManyWithoutProjectInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyProjectInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    OrganizationUpdateOneRequiredWithoutProjectsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutProjectsInput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutProjectsInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutProjectsInpu\
                t"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
    DatabaseUpdateManyWithoutProjectNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyProjectInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutProjectInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutProjectInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereInput"
    DatabaseUncheckedUpdateManyWithoutProjectNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutProjectInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyProjectInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutProjectInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutProjectInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereInput"
    DatabaseCreateNestedManyWithoutAgentInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutAgentInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyAgentInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
    DatabaseUpdateManyWithoutAgentNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutAgentInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpsertWithWhereUniqueWithoutAgentInput"
        createMany:
          $ref: "#/components/schemas/DatabaseCreateManyAgentInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/DatabaseWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateWithWhereUniqueWithoutAgentInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseUpdateManyWithWhereWithoutAgentInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereInput"
    AgentCreateNestedOneWithoutDatabasesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutDatabasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/AgentCreateOrConnectWithoutDatabasesInput"
        connect:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
    BackupCreateNestedManyWithoutDatabaseInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/BackupCreateManyDatabaseInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
    RestorationCreateNestedManyWithoutDatabaseInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyDatabaseInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
    ProjectCreateNestedOneWithoutDatabasesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutDatabasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/ProjectCreateOrConnectWithoutDatabasesInput"
        connect:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
    BackupUncheckedCreateNestedManyWithoutDatabaseInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/BackupCreateManyDatabaseInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
    RestorationUncheckedCreateNestedManyWithoutDatabaseInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyDatabaseInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
    EnumDbmsFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/Dbms"
    AgentUpdateOneRequiredWithoutDatabasesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutDatabasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/AgentCreateOrConnectWithoutDatabasesInput"
        upsert:
          $ref: "#/components/schemas/AgentUpsertWithoutDatabasesInput"
        connect:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateToOneWithWhereWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateWithoutDatabasesInput"
    BackupUpdateManyWithoutDatabaseNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/BackupUpsertWithWhereUniqueWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpsertWithWhereUniqueWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/BackupCreateManyDatabaseInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithWhereUniqueWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpdateWithWhereUniqueWithoutDatabaseInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateManyWithWhereWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpdateManyWithWhereWithoutDatabaseInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereInput"
    RestorationUpdateManyWithoutDatabaseNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutDatabaseInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutDatabaseInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyDatabaseInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutDatabaseInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutDatabaseInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutDatabaseInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
    ProjectUpdateOneWithoutDatabasesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutDatabasesInput"
        connectOrCreate:
          $ref: "#/components/schemas/ProjectCreateOrConnectWithoutDatabasesInput"
        upsert:
          $ref: "#/components/schemas/ProjectUpsertWithoutDatabasesInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectWhereInput"
        connect:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateToOneWithWhereWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutDatabasesInput"
    BackupUncheckedUpdateManyWithoutDatabaseNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateOrConnectWithoutDatabaseInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/BackupUpsertWithWhereUniqueWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpsertWithWhereUniqueWithoutDatabaseInput"
        createMany:
          $ref: "#/components/schemas/BackupCreateManyDatabaseInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/BackupWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithWhereUniqueWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpdateWithWhereUniqueWithoutDatabaseInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateManyWithWhereWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupUpdateManyWithWhereWithoutDatabaseInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereInput"
    RestorationUncheckedUpdateManyWithoutDatabaseNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutDatabaseInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutDatabaseInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutDatabaseInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyDatabaseInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutDatabaseInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutDatabaseInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutDatabaseInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
    DatabaseCreateNestedOneWithoutBackupsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutBackupsInput"
        connectOrCreate:
          $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutBackupsInput"
        connect:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
    RestorationCreateNestedManyWithoutBackupInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyBackupInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
    RestorationUncheckedCreateNestedManyWithoutBackupInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyBackupInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
    EnumStatusFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/Status"
    DatabaseUpdateOneRequiredWithoutBackupsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutBackupsInput"
        connectOrCreate:
          $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutBackupsInput"
        upsert:
          $ref: "#/components/schemas/DatabaseUpsertWithoutBackupsInput"
        connect:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateToOneWithWhereWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUpdateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutBackupsInput"
    RestorationUpdateManyWithoutBackupNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutBackupInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyBackupInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutBackupInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutBackupInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
    RestorationUncheckedUpdateManyWithoutBackupNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateOrConnectWithoutBackupInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpsertWithWhereUniqueWithoutBackupInput"
        createMany:
          $ref: "#/components/schemas/RestorationCreateManyBackupInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/RestorationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateWithWhereUniqueWithoutBackupInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationUpdateManyWithWhereWithoutBackupInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
    BackupCreateNestedOneWithoutRestorationsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutRestorationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/BackupCreateOrConnectWithoutRestorationsInput"
        connect:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
    DatabaseCreateNestedOneWithoutRestorationsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutRestorationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutRestorationsInput"
        connect:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
    BackupUpdateOneRequiredWithoutRestorationsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutRestorationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/BackupCreateOrConnectWithoutRestorationsInput"
        upsert:
          $ref: "#/components/schemas/BackupUpsertWithoutRestorationsInput"
        connect:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateToOneWithWhereWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateWithoutRestorationsInput"
    DatabaseUpdateOneWithoutRestorationsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutRestorationsInput"
        connectOrCreate:
          $ref: "#/components/schemas/DatabaseCreateOrConnectWithoutRestorationsInput"
        upsert:
          $ref: "#/components/schemas/DatabaseUpsertWithoutRestorationsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseWhereInput"
        connect:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateToOneWithWhereWithoutRestorationsInpu\
                t"
            - $ref: "#/components/schemas/DatabaseUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutRestorationsInput"
    EnumTypeStorageFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/TypeStorage"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableFilter"
            - type: "null"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedDateTimeNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
                format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeNullableFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatNullableFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedIntNullableFilter"
    NestedFloatNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: number
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: number
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatNullableFilter"
            - type: "null"
    NestedEnumRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleFilter"
    NestedBoolNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolNullableFilter"
            - type: "null"
    NestedEnumRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Role"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        not:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/NestedEnumRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumRoleFilter"
    NestedBoolNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolNullableFilter"
    NestedEnumOrganizationRoleFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/OrganizationRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
    NestedEnumOrganizationRoleWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/OrganizationRole"
        in:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        not:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/NestedEnumOrganizationRoleWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumOrganizationRoleFilter"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedEnumDbmsFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Dbms"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        not:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/NestedEnumDbmsFilter"
    NestedEnumDbmsWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Dbms"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Dbms"
        not:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/NestedEnumDbmsWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumDbmsFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumDbmsFilter"
    NestedEnumStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Status"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        not:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/NestedEnumStatusFilter"
    NestedEnumStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/Status"
        in:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/Status"
        not:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/NestedEnumStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumStatusFilter"
    NestedEnumTypeStorageFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TypeStorage"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        not:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
    NestedEnumTypeStorageWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/TypeStorage"
        in:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/TypeStorage"
        not:
          oneOf:
            - $ref: "#/components/schemas/TypeStorage"
            - $ref: "#/components/schemas/NestedEnumTypeStorageWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumTypeStorageFilter"
    UserCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationCreateNestedManyWithoutUserInput"
      required:
        - role
    UserUncheckedCreateWithoutAccountsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUncheckedCreateNestedManyWithoutUse\
            rInput"
      required:
        - role
    UserCreateOrConnectWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
      required:
        - where
        - create
    UserUpsertWithoutAccountsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutAccountsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutAccountsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutAccountsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutAccountsInput"
      required:
        - data
    UserUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutAccountsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUncheckedUpdateManyWithoutUserNeste\
            dInput"
    UserCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationCreateNestedManyWithoutUserInput"
      required:
        - role
    UserUncheckedCreateWithoutSessionsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUncheckedCreateNestedManyWithoutUse\
            rInput"
      required:
        - role
    UserCreateOrConnectWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
      required:
        - where
        - create
    UserUpsertWithoutSessionsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutSessionsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutSessionsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutSessionsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutSessionsInput"
      required:
        - data
    UserUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutSessionsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        organizations:
          $ref: "#/components/schemas/UserOrganizationUncheckedUpdateManyWithoutUserNeste\
            dInput"
    AccountCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
      required:
        - type
        - provider
        - providerAccountId
    AccountCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    AccountCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    SessionCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    SessionCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    SessionCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    UserOrganizationCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        role:
          $ref: "#/components/schemas/OrganizationRole"
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutUsersInput"
      required:
        - role
        - organization
    UserOrganizationUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        organizationId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - organizationId
        - role
    UserOrganizationCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    UserOrganizationCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    AccountUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    AccountUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateWithoutUserInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    AccountUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountUpdateManyMutationInput"
            - $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    AccountScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AccountScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AccountScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        providerAccountId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        refresh_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        access_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        expires_at:
          oneOf:
            - $ref: "#/components/schemas/IntNullableFilter"
            - type: integer
            - type: "null"
        token_type:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        scope:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        id_token:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        session_state:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    SessionUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    SessionUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateWithoutUserInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    SessionUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionUpdateManyMutationInput"
            - $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    SessionScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/SessionScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/SessionScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        sessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        expires:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    UserOrganizationUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    UserOrganizationUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithoutUserInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    UserOrganizationUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyMutationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    UserOrganizationScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        role:
          oneOf:
            - $ref: "#/components/schemas/EnumOrganizationRoleFilter"
            - $ref: "#/components/schemas/OrganizationRole"
    ProjectCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        databases:
          $ref: "#/components/schemas/DatabaseCreateNestedManyWithoutProjectInput"
      required:
        - slug
        - name
    ProjectUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        databases:
          $ref: "#/components/schemas/DatabaseUncheckedCreateNestedManyWithoutProjectInpu\
            t"
      required:
        - slug
        - name
    ProjectCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - create
    ProjectCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    UserOrganizationCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        role:
          $ref: "#/components/schemas/OrganizationRole"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrganizationsInput"
      required:
        - role
        - user
    UserOrganizationUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - userId
        - role
    UserOrganizationCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
      required:
        - where
        - create
    UserOrganizationCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ProjectUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutOrganizationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - update
        - create
    ProjectUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutOrganizationInput"
      required:
        - where
        - data
    ProjectUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyMutationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationInput"
      required:
        - where
        - data
    ProjectScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        slug:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isArchived:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    UserOrganizationUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateWithoutOrganizationI\
                nput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedCreateWithoutOrganizationI\
                nput"
      required:
        - where
        - update
        - create
    UserOrganizationUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateWithoutOrganizationI\
                nput"
      required:
        - where
        - data
    UserOrganizationUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationUpdateManyMutationInput"
            - $ref: "#/components/schemas/UserOrganizationUncheckedUpdateManyWithoutOrganizat\
                ionInput"
      required:
        - where
        - data
    UserCreateWithoutOrganizationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          $ref: "#/components/schemas/AccountCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionCreateNestedManyWithoutUserInput"
      required:
        - role
    UserUncheckedCreateWithoutOrganizationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        accounts:
          $ref: "#/components/schemas/AccountUncheckedCreateNestedManyWithoutUserInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedCreateNestedManyWithoutUserInput"
      required:
        - role
    UserCreateOrConnectWithoutOrganizationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationsInput"
      required:
        - where
        - create
    OrganizationCreateWithoutUsersInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
      required:
        - slug
        - name
    OrganizationUncheckedCreateWithoutUsersInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        projects:
          $ref: "#/components/schemas/ProjectUncheckedCreateNestedManyWithoutOrganization\
            Input"
      required:
        - slug
        - name
    OrganizationCreateOrConnectWithoutUsersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutUsersInput"
      required:
        - where
        - create
    UserUpsertWithoutOrganizationsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationsInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutOrganizationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationsInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationsInput"
      required:
        - data
    UserUpdateWithoutOrganizationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutOrganizationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        emailVerified:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        image:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/Role"
            - $ref: "#/components/schemas/EnumRoleFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        authMethod:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        accounts:
          $ref: "#/components/schemas/AccountUncheckedUpdateManyWithoutUserNestedInput"
        sessions:
          $ref: "#/components/schemas/SessionUncheckedUpdateManyWithoutUserNestedInput"
    OrganizationUpsertWithoutUsersInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutUsersInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutUsersInput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutUsersInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutUsersInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutUsersInput"
      required:
        - data
    OrganizationUpdateWithoutUsersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
    OrganizationUncheckedUpdateWithoutUsersInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationNested\
            Input"
    OrganizationCreateWithoutProjectsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        users:
          $ref: "#/components/schemas/UserOrganizationCreateNestedManyWithoutOrganization\
            Input"
      required:
        - slug
        - name
    OrganizationUncheckedCreateWithoutProjectsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        users:
          $ref: "#/components/schemas/UserOrganizationUncheckedCreateNestedManyWithoutOrg\
            anizationInput"
      required:
        - slug
        - name
    OrganizationCreateOrConnectWithoutProjectsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
      required:
        - where
        - create
    DatabaseCreateWithoutProjectInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        agent:
          $ref: "#/components/schemas/AgentCreateNestedOneWithoutDatabasesInput"
        backups:
          $ref: "#/components/schemas/BackupCreateNestedManyWithoutDatabaseInput"
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutDatabaseInput"
      required:
        - name
        - dbms
        - generatedId
        - agent
    DatabaseUncheckedCreateWithoutProjectInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        backups:
          $ref: "#/components/schemas/BackupUncheckedCreateNestedManyWithoutDatabaseInput"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedCreateNestedManyWithoutDatabase\
            Input"
      required:
        - name
        - dbms
        - generatedId
        - agentId
    DatabaseCreateOrConnectWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
      required:
        - where
        - create
    DatabaseCreateManyProjectInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateManyProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateManyProjectInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrganizationUpsertWithoutProjectsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutProjectsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
      required:
        - data
    OrganizationUpdateWithoutProjectsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        users:
          $ref: "#/components/schemas/UserOrganizationUpdateManyWithoutOrganizationNested\
            Input"
    OrganizationUncheckedUpdateWithoutProjectsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        deleted:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        users:
          $ref: "#/components/schemas/UserOrganizationUncheckedUpdateManyWithoutOrganizat\
            ionNestedInput"
    DatabaseUpsertWithWhereUniqueWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutProjectInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutProjectInput"
      required:
        - where
        - update
        - create
    DatabaseUpdateWithWhereUniqueWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutProjectInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutProjectInput"
      required:
        - where
        - data
    DatabaseUpdateManyWithWhereWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateManyMutationInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateManyWithoutProjectInput"
      required:
        - where
        - data
    DatabaseScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/DatabaseScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/DatabaseScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        dbms:
          oneOf:
            - $ref: "#/components/schemas/EnumDbmsFilter"
            - $ref: "#/components/schemas/Dbms"
        generatedId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        backupPolicy:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - $ref: "#/components/schemas/BoolNullableFilter"
            - type: boolean
            - type: "null"
        backupToRestore:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        agentId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        lastContact:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    DatabaseCreateWithoutAgentInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        backups:
          $ref: "#/components/schemas/BackupCreateNestedManyWithoutDatabaseInput"
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutDatabaseInput"
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutDatabasesInput"
      required:
        - name
        - dbms
        - generatedId
    DatabaseUncheckedCreateWithoutAgentInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
        backups:
          $ref: "#/components/schemas/BackupUncheckedCreateNestedManyWithoutDatabaseInput"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedCreateNestedManyWithoutDatabase\
            Input"
      required:
        - name
        - dbms
        - generatedId
    DatabaseCreateOrConnectWithoutAgentInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
      required:
        - where
        - create
    DatabaseCreateManyAgentInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateManyAgentInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateManyAgentInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    DatabaseUpsertWithWhereUniqueWithoutAgentInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutAgentInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutAgentInput"
      required:
        - where
        - update
        - create
    DatabaseUpdateWithWhereUniqueWithoutAgentInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutAgentInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutAgentInput"
      required:
        - where
        - data
    DatabaseUpdateManyWithWhereWithoutAgentInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateManyMutationInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateManyWithoutAgentInput"
      required:
        - where
        - data
    AgentCreateWithoutDatabasesInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
      required:
        - slug
        - name
    AgentUncheckedCreateWithoutDatabasesInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
      required:
        - slug
        - name
    AgentCreateOrConnectWithoutDatabasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutDatabasesInput"
      required:
        - where
        - create
    BackupCreateWithoutDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutBackupInput"
    BackupUncheckedCreateWithoutDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedCreateNestedManyWithoutBackupIn\
            put"
    BackupCreateOrConnectWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
      required:
        - where
        - create
    BackupCreateManyDatabaseInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateManyDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateManyDatabaseInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    RestorationCreateWithoutDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backup:
          $ref: "#/components/schemas/BackupCreateNestedOneWithoutRestorationsInput"
      required:
        - backup
    RestorationUncheckedCreateWithoutDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backupId:
          type: string
      required:
        - backupId
    RestorationCreateOrConnectWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
      required:
        - where
        - create
    RestorationCreateManyDatabaseInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateManyDatabaseInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateManyDatabaseInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ProjectCreateWithoutDatabasesInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutProjectsInput"
      required:
        - slug
        - name
        - organization
    ProjectUncheckedCreateWithoutDatabasesInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organizationId:
          type: string
      required:
        - slug
        - name
        - organizationId
    ProjectCreateOrConnectWithoutDatabasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutDatabasesInput"
      required:
        - where
        - create
    AgentUpsertWithoutDatabasesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateWithoutDatabasesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutDatabasesInput"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
      required:
        - update
        - create
    AgentUpdateToOneWithWhereWithoutDatabasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateWithoutDatabasesInput"
      required:
        - data
    AgentUpdateWithoutDatabasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
    AgentUncheckedUpdateWithoutDatabasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
    BackupUpsertWithWhereUniqueWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateWithoutDatabaseInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutDatabaseInput"
      required:
        - where
        - update
        - create
    BackupUpdateWithWhereUniqueWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithoutDatabaseInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateWithoutDatabaseInput"
      required:
        - where
        - data
    BackupUpdateManyWithWhereWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateManyMutationInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateManyWithoutDatabaseInput"
      required:
        - where
        - data
    BackupScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/BackupScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/BackupScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    RestorationUpsertWithWhereUniqueWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateWithoutDatabaseInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutDatabaseInput"
      required:
        - where
        - update
        - create
    RestorationUpdateWithWhereUniqueWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithoutDatabaseInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateWithoutDatabaseInput"
      required:
        - where
        - data
    RestorationUpdateManyWithWhereWithoutDatabaseInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyMutationInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutDatabaseInput"
      required:
        - where
        - data
    RestorationScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/RestorationScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/RestorationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeNullableFilter"
            - type: string
              format: date-time
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumStatusFilter"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        databaseId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
    ProjectUpsertWithoutDatabasesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutDatabasesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutDatabasesInput"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
      required:
        - update
        - create
    ProjectUpdateToOneWithWhereWithoutDatabasesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutDatabasesInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutDatabasesInput"
      required:
        - data
    ProjectUpdateWithoutDatabasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutProjectsNestedI\
            nput"
    ProjectUncheckedUpdateWithoutDatabasesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    DatabaseCreateWithoutBackupsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        agent:
          $ref: "#/components/schemas/AgentCreateNestedOneWithoutDatabasesInput"
        restorations:
          $ref: "#/components/schemas/RestorationCreateNestedManyWithoutDatabaseInput"
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutDatabasesInput"
      required:
        - name
        - dbms
        - generatedId
        - agent
    DatabaseUncheckedCreateWithoutBackupsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedCreateNestedManyWithoutDatabase\
            Input"
      required:
        - name
        - dbms
        - generatedId
        - agentId
    DatabaseCreateOrConnectWithoutBackupsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutBackupsInput"
      required:
        - where
        - create
    RestorationCreateWithoutBackupInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        database:
          $ref: "#/components/schemas/DatabaseCreateNestedOneWithoutRestorationsInput"
    RestorationUncheckedCreateWithoutBackupInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    RestorationCreateOrConnectWithoutBackupInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
      required:
        - where
        - create
    RestorationCreateManyBackupInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateManyBackupInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateManyBackupInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    DatabaseUpsertWithoutBackupsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutBackupsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutBackupsInput"
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
      required:
        - update
        - create
    DatabaseUpdateToOneWithWhereWithoutBackupsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutBackupsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutBackupsInput"
      required:
        - data
    DatabaseUpdateWithoutBackupsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        agent:
          $ref: "#/components/schemas/AgentUpdateOneRequiredWithoutDatabasesNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutDatabaseNestedInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutDatabasesNestedInput"
    DatabaseUncheckedUpdateWithoutBackupsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        agentId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutDatabaseNested\
            Input"
    RestorationUpsertWithWhereUniqueWithoutBackupInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateWithoutBackupInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedCreateWithoutBackupInput"
      required:
        - where
        - update
        - create
    RestorationUpdateWithWhereUniqueWithoutBackupInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateWithoutBackupInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateWithoutBackupInput"
      required:
        - where
        - data
    RestorationUpdateManyWithWhereWithoutBackupInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationUpdateManyMutationInput"
            - $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutBackupInput"
      required:
        - where
        - data
    BackupCreateWithoutRestorationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        database:
          $ref: "#/components/schemas/DatabaseCreateNestedOneWithoutBackupsInput"
      required:
        - database
    BackupUncheckedCreateWithoutRestorationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          type: string
      required:
        - databaseId
    BackupCreateOrConnectWithoutRestorationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutRestorationsInput"
      required:
        - where
        - create
    DatabaseCreateWithoutRestorationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        agent:
          $ref: "#/components/schemas/AgentCreateNestedOneWithoutDatabasesInput"
        backups:
          $ref: "#/components/schemas/BackupCreateNestedManyWithoutDatabaseInput"
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutDatabasesInput"
      required:
        - name
        - dbms
        - generatedId
        - agent
    DatabaseUncheckedCreateWithoutRestorationsInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
        backups:
          $ref: "#/components/schemas/BackupUncheckedCreateNestedManyWithoutDatabaseInput"
      required:
        - name
        - dbms
        - generatedId
        - agentId
    DatabaseCreateOrConnectWithoutRestorationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutRestorationsInput"
      required:
        - where
        - create
    BackupUpsertWithoutRestorationsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateWithoutRestorationsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedCreateWithoutRestorationsInput"
        where:
          $ref: "#/components/schemas/BackupWhereInput"
      required:
        - update
        - create
    BackupUpdateToOneWithWhereWithoutRestorationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/BackupUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/BackupUncheckedUpdateWithoutRestorationsInput"
      required:
        - data
    BackupUpdateWithoutRestorationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        database:
          $ref: "#/components/schemas/DatabaseUpdateOneRequiredWithoutBackupsNestedInput"
    BackupUncheckedUpdateWithoutRestorationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        databaseId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    DatabaseUpsertWithoutRestorationsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutRestorationsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedCreateWithoutRestorationsInput"
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
      required:
        - update
        - create
    DatabaseUpdateToOneWithWhereWithoutRestorationsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseUpdateWithoutRestorationsInput"
            - $ref: "#/components/schemas/DatabaseUncheckedUpdateWithoutRestorationsInput"
      required:
        - data
    DatabaseUpdateWithoutRestorationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        agent:
          $ref: "#/components/schemas/AgentUpdateOneRequiredWithoutDatabasesNestedInput"
        backups:
          $ref: "#/components/schemas/BackupUpdateManyWithoutDatabaseNestedInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutDatabasesNestedInput"
    DatabaseUncheckedUpdateWithoutRestorationsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        agentId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backups:
          $ref: "#/components/schemas/BackupUncheckedUpdateManyWithoutDatabaseNestedInput"
    AccountCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
      required:
        - type
        - provider
        - providerAccountId
    SessionCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        expires:
          type: string
          format: date-time
      required:
        - sessionToken
        - expires
    UserOrganizationCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        organizationId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - organizationId
        - role
    AccountUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    AccountUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    AccountUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        providerAccountId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        refresh_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        access_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        expires_at:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NullableIntFieldUpdateOperationsInput"
            - type: "null"
        token_type:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        scope:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        id_token:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        session_state:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    SessionUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    SessionUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        sessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        expires:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserOrganizationUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutUsersNestedInpu\
            t"
    UserOrganizationUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
    UserOrganizationUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
    ProjectCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
      required:
        - slug
        - name
    UserOrganizationCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
      required:
        - userId
        - role
    ProjectUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        databases:
          $ref: "#/components/schemas/DatabaseUpdateManyWithoutProjectNestedInput"
    ProjectUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        databases:
          $ref: "#/components/schemas/DatabaseUncheckedUpdateManyWithoutProjectNestedInpu\
            t"
    ProjectUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        slug:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isArchived:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
    UserOrganizationUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrganizationsNestedInpu\
            t"
    UserOrganizationUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
    UserOrganizationUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        role:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRole"
            - $ref: "#/components/schemas/EnumOrganizationRoleFieldUpdateOperationsInput"
    DatabaseCreateManyProjectInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
      required:
        - name
        - dbms
        - generatedId
        - agentId
    DatabaseUpdateWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        agent:
          $ref: "#/components/schemas/AgentUpdateOneRequiredWithoutDatabasesNestedInput"
        backups:
          $ref: "#/components/schemas/BackupUpdateManyWithoutDatabaseNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutDatabaseNestedInput"
    DatabaseUncheckedUpdateWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        agentId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        backups:
          $ref: "#/components/schemas/BackupUncheckedUpdateManyWithoutDatabaseNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutDatabaseNested\
            Input"
    DatabaseUncheckedUpdateManyWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        agentId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
    DatabaseCreateManyAgentInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
      required:
        - name
        - dbms
        - generatedId
    DatabaseUpdateWithoutAgentInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        backups:
          $ref: "#/components/schemas/BackupUpdateManyWithoutDatabaseNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutDatabaseNestedInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutDatabasesNestedInput"
    DatabaseUncheckedUpdateWithoutAgentInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backups:
          $ref: "#/components/schemas/BackupUncheckedUpdateManyWithoutDatabaseNestedInput"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutDatabaseNested\
            Input"
    DatabaseUncheckedUpdateManyWithoutAgentInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        dbms:
          oneOf:
            - $ref: "#/components/schemas/Dbms"
            - $ref: "#/components/schemas/EnumDbmsFieldUpdateOperationsInput"
        generatedId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        backupPolicy:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        isWaitingForBackup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NullableBoolFieldUpdateOperationsInput"
            - type: "null"
        backupToRestore:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        lastContact:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    BackupCreateManyDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
    RestorationCreateManyDatabaseInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backupId:
          type: string
      required:
        - backupId
    BackupUpdateWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        restorations:
          $ref: "#/components/schemas/RestorationUpdateManyWithoutBackupNestedInput"
    BackupUncheckedUpdateWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        restorations:
          $ref: "#/components/schemas/RestorationUncheckedUpdateManyWithoutBackupNestedIn\
            put"
    BackupUncheckedUpdateManyWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        file:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    RestorationUpdateWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        backup:
          $ref: "#/components/schemas/BackupUpdateOneRequiredWithoutRestorationsNestedInp\
            ut"
    RestorationUncheckedUpdateWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        backupId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    RestorationUncheckedUpdateManyWithoutDatabaseInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        backupId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    RestorationCreateManyBackupInput:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    RestorationUpdateWithoutBackupInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        database:
          $ref: "#/components/schemas/DatabaseUpdateOneWithoutRestorationsNestedInput"
    RestorationUncheckedUpdateWithoutBackupInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        databaseId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    RestorationUncheckedUpdateManyWithoutBackupInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NullableDateTimeFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/Status"
            - $ref: "#/components/schemas/EnumStatusFieldUpdateOperationsInput"
        databaseId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    OrganizationArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
    ProjectArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
    AgentArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
    DatabaseArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
    BackupArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
    AccountInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    UserInclude:
      type: object
      properties:
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        organizations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    OrganizationInclude:
      type: object
      properties:
        projects:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectFindManyArgs"
        users:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountOutputTypeArgs"
    UserOrganizationInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    ProjectInclude:
      type: object
      properties:
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        databases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountOutputTypeArgs"
    AgentInclude:
      type: object
      properties:
        databases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountOutputTypeArgs"
    DatabaseInclude:
      type: object
      properties:
        agent:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentArgs"
        backups:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupFindManyArgs"
        restorations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationFindManyArgs"
        project:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseCountOutputTypeArgs"
    BackupInclude:
      type: object
      properties:
        database:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseArgs"
        restorations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupCountOutputTypeArgs"
    RestorationInclude:
      type: object
      properties:
        backup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupArgs"
        database:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        accounts:
          type: boolean
        sessions:
          type: boolean
        organizations:
          type: boolean
    OrganizationCountOutputTypeSelect:
      type: object
      properties:
        projects:
          type: boolean
        users:
          type: boolean
    ProjectCountOutputTypeSelect:
      type: object
      properties:
        databases:
          type: boolean
    AgentCountOutputTypeSelect:
      type: object
      properties:
        databases:
          type: boolean
    DatabaseCountOutputTypeSelect:
      type: object
      properties:
        backups:
          type: boolean
        restorations:
          type: boolean
    BackupCountOutputTypeSelect:
      type: object
      properties:
        restorations:
          type: boolean
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    OrganizationCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationCountOutputTypeSelect"
    ProjectCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectCountOutputTypeSelect"
    AgentCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentCountOutputTypeSelect"
    DatabaseCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/DatabaseCountOutputTypeSelect"
    BackupCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/BackupCountOutputTypeSelect"
    AccountSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    SessionSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    VerificationTokenSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        password:
          type: boolean
        authMethod:
          type: boolean
        deleted:
          type: boolean
        accounts:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountFindManyArgs"
        sessions:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionFindManyArgs"
        organizations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    OrganizationSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        projects:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectFindManyArgs"
        users:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationFindManyArgs"
        deleted:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountOutputTypeArgs"
    UserOrganizationSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        role:
          type: boolean
    ProjectSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        isArchived:
          type: boolean
        organizationId:
          type: boolean
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        databases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountOutputTypeArgs"
    AgentSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        lastContact:
          type: boolean
        databases:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountOutputTypeArgs"
    DatabaseSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        dbms:
          type: boolean
        generatedId:
          type: boolean
        description:
          type: boolean
        backupPolicy:
          type: boolean
        isWaitingForBackup:
          type: boolean
        backupToRestore:
          type: boolean
        agentId:
          type: boolean
        agent:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentArgs"
        lastContact:
          type: boolean
        backups:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupFindManyArgs"
        restorations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationFindManyArgs"
        projectId:
          type: boolean
        project:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseCountOutputTypeArgs"
    BackupSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        file:
          type: boolean
        databaseId:
          type: boolean
        database:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseArgs"
        restorations:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupCountOutputTypeArgs"
    RestorationSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        backupId:
          type: boolean
        backup:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupArgs"
        databaseId:
          type: boolean
        database:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseArgs"
    SettingsSelect:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        storage:
          type: boolean
        name:
          type: boolean
        s3EndPointUrl:
          type: boolean
        s3AccessKeyId:
          type: boolean
        s3SecretAccessKey:
          type: boolean
        S3BucketName:
          type: boolean
        smtpPassword:
          type: boolean
        smtpFrom:
          type: boolean
        smtpHost:
          type: boolean
        smtpPort:
          type: boolean
        smtpUser:
          type: boolean
    AccountCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
        _all:
          type: boolean
    AccountAvgAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountSumAggregateInput:
      type: object
      properties:
        expires_at:
          type: boolean
    AccountMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    AccountMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        type:
          type: boolean
        provider:
          type: boolean
        providerAccountId:
          type: boolean
        refresh_token:
          type: boolean
        access_token:
          type: boolean
        expires_at:
          type: boolean
        token_type:
          type: boolean
        scope:
          type: boolean
        id_token:
          type: boolean
        session_state:
          type: boolean
    SessionCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    SessionMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    SessionMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        sessionToken:
          type: boolean
        userId:
          type: boolean
        expires:
          type: boolean
    VerificationTokenCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
        _all:
          type: boolean
    VerificationTokenMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    VerificationTokenMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        identifier:
          type: boolean
        token:
          type: boolean
        expires:
          type: boolean
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        password:
          type: boolean
        authMethod:
          type: boolean
        deleted:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        password:
          type: boolean
        authMethod:
          type: boolean
        deleted:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        emailVerified:
          type: boolean
        image:
          type: boolean
        role:
          type: boolean
        password:
          type: boolean
        authMethod:
          type: boolean
        deleted:
          type: boolean
    OrganizationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        deleted:
          type: boolean
        _all:
          type: boolean
    OrganizationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        deleted:
          type: boolean
    OrganizationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        deleted:
          type: boolean
    UserOrganizationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
        role:
          type: boolean
        _all:
          type: boolean
    UserOrganizationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
        role:
          type: boolean
    UserOrganizationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
        role:
          type: boolean
    ProjectCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        isArchived:
          type: boolean
        organizationId:
          type: boolean
        _all:
          type: boolean
    ProjectMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        isArchived:
          type: boolean
        organizationId:
          type: boolean
    ProjectMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        isArchived:
          type: boolean
        organizationId:
          type: boolean
    AgentCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        lastContact:
          type: boolean
        _all:
          type: boolean
    AgentMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        lastContact:
          type: boolean
    AgentMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        slug:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        lastContact:
          type: boolean
    DatabaseCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        dbms:
          type: boolean
        generatedId:
          type: boolean
        description:
          type: boolean
        backupPolicy:
          type: boolean
        isWaitingForBackup:
          type: boolean
        backupToRestore:
          type: boolean
        agentId:
          type: boolean
        lastContact:
          type: boolean
        projectId:
          type: boolean
        _all:
          type: boolean
    DatabaseMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        dbms:
          type: boolean
        generatedId:
          type: boolean
        description:
          type: boolean
        backupPolicy:
          type: boolean
        isWaitingForBackup:
          type: boolean
        backupToRestore:
          type: boolean
        agentId:
          type: boolean
        lastContact:
          type: boolean
        projectId:
          type: boolean
    DatabaseMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        name:
          type: boolean
        dbms:
          type: boolean
        generatedId:
          type: boolean
        description:
          type: boolean
        backupPolicy:
          type: boolean
        isWaitingForBackup:
          type: boolean
        backupToRestore:
          type: boolean
        agentId:
          type: boolean
        lastContact:
          type: boolean
        projectId:
          type: boolean
    BackupCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        file:
          type: boolean
        databaseId:
          type: boolean
        _all:
          type: boolean
    BackupMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        file:
          type: boolean
        databaseId:
          type: boolean
    BackupMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        file:
          type: boolean
        databaseId:
          type: boolean
    RestorationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        backupId:
          type: boolean
        databaseId:
          type: boolean
        _all:
          type: boolean
    RestorationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        backupId:
          type: boolean
        databaseId:
          type: boolean
    RestorationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        status:
          type: boolean
        backupId:
          type: boolean
        databaseId:
          type: boolean
    SettingsCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        storage:
          type: boolean
        name:
          type: boolean
        s3EndPointUrl:
          type: boolean
        s3AccessKeyId:
          type: boolean
        s3SecretAccessKey:
          type: boolean
        S3BucketName:
          type: boolean
        smtpPassword:
          type: boolean
        smtpFrom:
          type: boolean
        smtpHost:
          type: boolean
        smtpPort:
          type: boolean
        smtpUser:
          type: boolean
        _all:
          type: boolean
    SettingsMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        storage:
          type: boolean
        name:
          type: boolean
        s3EndPointUrl:
          type: boolean
        s3AccessKeyId:
          type: boolean
        s3SecretAccessKey:
          type: boolean
        S3BucketName:
          type: boolean
        smtpPassword:
          type: boolean
        smtpFrom:
          type: boolean
        smtpHost:
          type: boolean
        smtpPort:
          type: boolean
        smtpUser:
          type: boolean
    SettingsMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        storage:
          type: boolean
        name:
          type: boolean
        s3EndPointUrl:
          type: boolean
        s3AccessKeyId:
          type: boolean
        s3SecretAccessKey:
          type: boolean
        S3BucketName:
          type: boolean
        smtpPassword:
          type: boolean
        smtpFrom:
          type: boolean
        smtpHost:
          type: boolean
        smtpPort:
          type: boolean
        smtpUser:
          type: boolean
    AggregateAccount:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMaxAggregateOutputType"
    AccountGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        type:
          type: string
        provider:
          type: string
        providerAccountId:
          type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AccountMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - userId
        - type
        - provider
        - providerAccountId
    AggregateSession:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMaxAggregateOutputType"
    SessionGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          type: string
        userId:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SessionMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - sessionToken
        - userId
        - expires
    AggregateVerificationToken:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
    VerificationTokenGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          type: string
        token:
          type: string
        expires:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/VerificationTokenMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - identifier
        - token
        - expires
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - role
    AggregateOrganization:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMaxAggregateOutputType"
    OrganizationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - slug
        - name
    AggregateUserOrganization:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationMaxAggregateOutputType"
    UserOrganizationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          type: string
        organizationId:
          type: string
        role:
          $ref: "#/components/schemas/OrganizationRole"
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserOrganizationMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - userId
        - organizationId
        - role
    AggregateProject:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMaxAggregateOutputType"
    ProjectGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        isArchived:
          type: boolean
        organizationId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - slug
        - name
        - isArchived
        - organizationId
    AggregateAgent:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMaxAggregateOutputType"
    AgentGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - slug
        - name
    AggregateDatabase:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseMaxAggregateOutputType"
    DatabaseGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          type: string
        dbms:
          $ref: "#/components/schemas/Dbms"
        generatedId:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/DatabaseMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - name
        - dbms
        - generatedId
        - agentId
    AggregateBackup:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupMaxAggregateOutputType"
    BackupGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/BackupMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - status
        - databaseId
    AggregateRestoration:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationMaxAggregateOutputType"
    RestorationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          $ref: "#/components/schemas/Status"
        backupId:
          type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/RestorationMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - status
        - backupId
    AggregateSettings:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsMaxAggregateOutputType"
    SettingsGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          $ref: "#/components/schemas/TypeStorage"
        name:
          type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/SettingsMaxAggregateOutputType"
      required:
        - id
        - createdAt
        - storage
        - name
    AccountCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        userId:
          type: integer
        type:
          type: integer
        provider:
          type: integer
        providerAccountId:
          type: integer
        refresh_token:
          type: integer
        access_token:
          type: integer
        expires_at:
          type: integer
        token_type:
          type: integer
        scope:
          type: integer
        id_token:
          type: integer
        session_state:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - userId
        - type
        - provider
        - providerAccountId
        - refresh_token
        - access_token
        - expires_at
        - token_type
        - scope
        - id_token
        - session_state
        - _all
    AccountAvgAggregateOutputType:
      type: object
      properties:
        expires_at:
          oneOf:
            - type: "null"
            - type: number
    AccountSumAggregateOutputType:
      type: object
      properties:
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
    AccountMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        providerAccountId:
          oneOf:
            - type: "null"
            - type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
    AccountMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        providerAccountId:
          oneOf:
            - type: "null"
            - type: string
        refresh_token:
          oneOf:
            - type: "null"
            - type: string
        access_token:
          oneOf:
            - type: "null"
            - type: string
        expires_at:
          oneOf:
            - type: "null"
            - type: integer
        token_type:
          oneOf:
            - type: "null"
            - type: string
        scope:
          oneOf:
            - type: "null"
            - type: string
        id_token:
          oneOf:
            - type: "null"
            - type: string
        session_state:
          oneOf:
            - type: "null"
            - type: string
    SessionCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        sessionToken:
          type: integer
        userId:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - sessionToken
        - userId
        - expires
        - _all
    SessionMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    SessionMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        sessionToken:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    VerificationTokenCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        identifier:
          type: integer
        token:
          type: integer
        expires:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - identifier
        - token
        - expires
        - _all
    VerificationTokenMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          oneOf:
            - type: "null"
            - type: string
        token:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    VerificationTokenMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        identifier:
          oneOf:
            - type: "null"
            - type: string
        token:
          oneOf:
            - type: "null"
            - type: string
        expires:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        name:
          type: integer
        email:
          type: integer
        emailVerified:
          type: integer
        image:
          type: integer
        role:
          type: integer
        password:
          type: integer
        authMethod:
          type: integer
        deleted:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - email
        - emailVerified
        - image
        - role
        - password
        - authMethod
        - deleted
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        emailVerified:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        image:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Role"
        password:
          oneOf:
            - type: "null"
            - type: string
        authMethod:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
    OrganizationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        slug:
          type: integer
        name:
          type: integer
        deleted:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - deleted
        - _all
    OrganizationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
    OrganizationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        deleted:
          oneOf:
            - type: "null"
            - type: boolean
    UserOrganizationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        userId:
          type: integer
        organizationId:
          type: integer
        role:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - userId
        - organizationId
        - role
        - _all
    UserOrganizationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRole"
    UserOrganizationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        role:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRole"
    ProjectCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        slug:
          type: integer
        name:
          type: integer
        isArchived:
          type: integer
        organizationId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - isArchived
        - organizationId
        - _all
    ProjectMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        isArchived:
          oneOf:
            - type: "null"
            - type: boolean
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    ProjectMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        isArchived:
          oneOf:
            - type: "null"
            - type: boolean
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    AgentCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        slug:
          type: integer
        name:
          type: integer
        description:
          type: integer
        lastContact:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - slug
        - name
        - description
        - lastContact
        - _all
    AgentMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    AgentMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        slug:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    DatabaseCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        name:
          type: integer
        dbms:
          type: integer
        generatedId:
          type: integer
        description:
          type: integer
        backupPolicy:
          type: integer
        isWaitingForBackup:
          type: integer
        backupToRestore:
          type: integer
        agentId:
          type: integer
        lastContact:
          type: integer
        projectId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - dbms
        - generatedId
        - description
        - backupPolicy
        - isWaitingForBackup
        - backupToRestore
        - agentId
        - lastContact
        - projectId
        - _all
    DatabaseMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        dbms:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Dbms"
        generatedId:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
    DatabaseMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        name:
          oneOf:
            - type: "null"
            - type: string
        dbms:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Dbms"
        generatedId:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        backupPolicy:
          oneOf:
            - type: "null"
            - type: string
        isWaitingForBackup:
          oneOf:
            - type: "null"
            - type: boolean
        backupToRestore:
          oneOf:
            - type: "null"
            - type: string
        agentId:
          oneOf:
            - type: "null"
            - type: string
        lastContact:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        projectId:
          oneOf:
            - type: "null"
            - type: string
    BackupCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        status:
          type: integer
        file:
          type: integer
        databaseId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - status
        - file
        - databaseId
        - _all
    BackupMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    BackupMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Status"
        file:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    RestorationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        status:
          type: integer
        backupId:
          type: integer
        databaseId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - status
        - backupId
        - databaseId
        - _all
    RestorationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    RestorationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Status"
        backupId:
          oneOf:
            - type: "null"
            - type: string
        databaseId:
          oneOf:
            - type: "null"
            - type: string
    SettingsCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        storage:
          type: integer
        name:
          type: integer
        s3EndPointUrl:
          type: integer
        s3AccessKeyId:
          type: integer
        s3SecretAccessKey:
          type: integer
        S3BucketName:
          type: integer
        smtpPassword:
          type: integer
        smtpFrom:
          type: integer
        smtpHost:
          type: integer
        smtpPort:
          type: integer
        smtpUser:
          type: integer
        _all:
          type: integer
      required:
        - id
        - createdAt
        - updatedAt
        - storage
        - name
        - s3EndPointUrl
        - s3AccessKeyId
        - s3SecretAccessKey
        - S3BucketName
        - smtpPassword
        - smtpFrom
        - smtpHost
        - smtpPort
        - smtpUser
        - _all
    SettingsMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TypeStorage"
        name:
          oneOf:
            - type: "null"
            - type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
    SettingsMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        storage:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TypeStorage"
        name:
          oneOf:
            - type: "null"
            - type: string
        s3EndPointUrl:
          oneOf:
            - type: "null"
            - type: string
        s3AccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        s3SecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        S3BucketName:
          oneOf:
            - type: "null"
            - type: string
        smtpPassword:
          oneOf:
            - type: "null"
            - type: string
        smtpFrom:
          oneOf:
            - type: "null"
            - type: string
        smtpHost:
          oneOf:
            - type: "null"
            - type: string
        smtpPort:
          oneOf:
            - type: "null"
            - type: string
        smtpUser:
          oneOf:
            - type: "null"
            - type: string
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    AccountCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        data:
          $ref: "#/components/schemas/AccountCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AccountCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/AccountCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        data:
          $ref: "#/components/schemas/AccountUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AccountCreateInput"
        update:
          $ref: "#/components/schemas/AccountUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        include:
          $ref: "#/components/schemas/AccountInclude"
        where:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AccountSelect"
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AccountWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AccountGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AccountWhereInput"
        orderBy:
          $ref: "#/components/schemas/AccountOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AccountScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AccountScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AccountCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AccountMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AccountMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AccountSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AccountAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        data:
          $ref: "#/components/schemas/SessionCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SessionCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/SessionCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        data:
          $ref: "#/components/schemas/SessionUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SessionCreateInput"
        update:
          $ref: "#/components/schemas/SessionUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        include:
          $ref: "#/components/schemas/SessionInclude"
        where:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SessionSelect"
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SessionWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SessionGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SessionWhereInput"
        orderBy:
          $ref: "#/components/schemas/SessionOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SessionScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SessionScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SessionCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SessionMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SessionMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        data:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/VerificationTokenCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/VerificationTokenCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        data:
          $ref: "#/components/schemas/VerificationTokenUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        create:
          $ref: "#/components/schemas/VerificationTokenCreateInput"
        update:
          $ref: "#/components/schemas/VerificationTokenUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/VerificationTokenSelect"
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/VerificationTokenWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    VerificationTokenGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/VerificationTokenWhereInput"
        orderBy:
          $ref: "#/components/schemas/VerificationTokenOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/VerificationTokenScalarFieldEnum"
        having:
          $ref: "#/components/schemas/VerificationTokenScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/VerificationTokenCountAggregateInput"
        _min:
          $ref: "#/components/schemas/VerificationTokenMinAggregateInput"
        _max:
          $ref: "#/components/schemas/VerificationTokenMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        data:
          $ref: "#/components/schemas/OrganizationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/OrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          $ref: "#/components/schemas/OrganizationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/OrganizationCreateInput"
        update:
          $ref: "#/components/schemas/OrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/OrganizationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        data:
          $ref: "#/components/schemas/UserOrganizationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserOrganizationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserOrganizationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserOrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        data:
          $ref: "#/components/schemas/UserOrganizationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserOrganizationCreateInput"
        update:
          $ref: "#/components/schemas/UserOrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        include:
          $ref: "#/components/schemas/UserOrganizationInclude"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserOrganizationSelect"
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrganizationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserOrganizationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserOrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserOrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserOrganizationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserOrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrganizationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserOrganizationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserOrganizationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserOrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserOrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserOrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        data:
          $ref: "#/components/schemas/ProjectCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ProjectUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        data:
          $ref: "#/components/schemas/ProjectUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ProjectCreateInput"
        update:
          $ref: "#/components/schemas/ProjectUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        orderBy:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ProjectMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ProjectMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        orderBy:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ProjectScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ProjectMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ProjectMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        data:
          $ref: "#/components/schemas/AgentCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AgentUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        data:
          $ref: "#/components/schemas/AgentUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AgentCreateInput"
        update:
          $ref: "#/components/schemas/AgentUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        orderBy:
          $ref: "#/components/schemas/AgentOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AgentMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AgentMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        orderBy:
          $ref: "#/components/schemas/AgentOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AgentScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AgentMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AgentMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        data:
          $ref: "#/components/schemas/DatabaseCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/DatabaseCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/DatabaseCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        data:
          $ref: "#/components/schemas/DatabaseUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        data:
          $ref: "#/components/schemas/DatabaseUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        create:
          $ref: "#/components/schemas/DatabaseCreateInput"
        update:
          $ref: "#/components/schemas/DatabaseUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        include:
          $ref: "#/components/schemas/DatabaseInclude"
        where:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/DatabaseSelect"
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        orderBy:
          $ref: "#/components/schemas/DatabaseOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/DatabaseWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseCountAggregateInput"
        _min:
          $ref: "#/components/schemas/DatabaseMinAggregateInput"
        _max:
          $ref: "#/components/schemas/DatabaseMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    DatabaseGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/DatabaseWhereInput"
        orderBy:
          $ref: "#/components/schemas/DatabaseOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/DatabaseScalarFieldEnum"
        having:
          $ref: "#/components/schemas/DatabaseScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/DatabaseCountAggregateInput"
        _min:
          $ref: "#/components/schemas/DatabaseMinAggregateInput"
        _max:
          $ref: "#/components/schemas/DatabaseMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        data:
          $ref: "#/components/schemas/BackupCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/BackupCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/BackupCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        data:
          $ref: "#/components/schemas/BackupUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        data:
          $ref: "#/components/schemas/BackupUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        create:
          $ref: "#/components/schemas/BackupCreateInput"
        update:
          $ref: "#/components/schemas/BackupUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        include:
          $ref: "#/components/schemas/BackupInclude"
        where:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/BackupSelect"
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        orderBy:
          $ref: "#/components/schemas/BackupOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/BackupWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupCountAggregateInput"
        _min:
          $ref: "#/components/schemas/BackupMinAggregateInput"
        _max:
          $ref: "#/components/schemas/BackupMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    BackupGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/BackupWhereInput"
        orderBy:
          $ref: "#/components/schemas/BackupOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/BackupScalarFieldEnum"
        having:
          $ref: "#/components/schemas/BackupScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BackupCountAggregateInput"
        _min:
          $ref: "#/components/schemas/BackupMinAggregateInput"
        _max:
          $ref: "#/components/schemas/BackupMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        data:
          $ref: "#/components/schemas/RestorationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/RestorationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/RestorationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/RestorationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        data:
          $ref: "#/components/schemas/RestorationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/RestorationCreateInput"
        update:
          $ref: "#/components/schemas/RestorationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        include:
          $ref: "#/components/schemas/RestorationInclude"
        where:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/RestorationSelect"
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        orderBy:
          $ref: "#/components/schemas/RestorationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/RestorationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RestorationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RestorationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    RestorationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/RestorationWhereInput"
        orderBy:
          $ref: "#/components/schemas/RestorationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/RestorationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/RestorationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/RestorationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/RestorationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/RestorationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        data:
          $ref: "#/components/schemas/SettingsCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/SettingsCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/SettingsCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereUniqueInput"
        data:
          $ref: "#/components/schemas/SettingsUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        data:
          $ref: "#/components/schemas/SettingsUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereUniqueInput"
        create:
          $ref: "#/components/schemas/SettingsCreateInput"
        update:
          $ref: "#/components/schemas/SettingsUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/SettingsSelect"
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        orderBy:
          $ref: "#/components/schemas/SettingsOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/SettingsWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SettingsCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SettingsMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SettingsMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    SettingsGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/SettingsWhereInput"
        orderBy:
          $ref: "#/components/schemas/SettingsOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/SettingsScalarFieldEnum"
        having:
          $ref: "#/components/schemas/SettingsScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/SettingsCountAggregateInput"
        _min:
          $ref: "#/components/schemas/SettingsMinAggregateInput"
        _max:
          $ref: "#/components/schemas/SettingsMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
paths:
  /account/create:
    post:
      operationId: createAccount
      description: Create a new Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateArgs"
  /account/createMany:
    post:
      operationId: createManyAccount
      description: Create several Account
      tags:
        - account
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCreateManyArgs"
  /account/findUnique:
    get:
      operationId: findUniqueAccount
      description: Find one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/findFirst:
    get:
      operationId: findFirstAccount
      description: Find the first Account matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/findMany:
    get:
      operationId: findManyAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/update:
    patch:
      operationId: updateAccount
      description: Update a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateArgs"
  /account/updateMany:
    patch:
      operationId: updateManyAccount
      description: Update Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpdateManyArgs"
  /account/upsert:
    post:
      operationId: upsertAccount
      description: Upsert a Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountUpsertArgs"
  /account/delete:
    delete:
      operationId: deleteAccount
      description: Delete one unique Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Account"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/deleteMany:
    delete:
      operationId: deleteManyAccount
      description: Delete Accounts matching the given condition
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/count:
    get:
      operationId: countAccount
      description: Find a list of Account
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AccountCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/aggregate:
    get:
      operationId: aggregateAccount
      description: Aggregate Accounts
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAccount"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /account/groupBy:
    get:
      operationId: groupByAccount
      description: Group Accounts by fields
      tags:
        - account
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/create:
    post:
      operationId: createSession
      description: Create a new Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateArgs"
  /session/createMany:
    post:
      operationId: createManySession
      description: Create several Session
      tags:
        - session
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionCreateManyArgs"
  /session/findUnique:
    get:
      operationId: findUniqueSession
      description: Find one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/findFirst:
    get:
      operationId: findFirstSession
      description: Find the first Session matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/findMany:
    get:
      operationId: findManySession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/update:
    patch:
      operationId: updateSession
      description: Update a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateArgs"
  /session/updateMany:
    patch:
      operationId: updateManySession
      description: Update Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpdateManyArgs"
  /session/upsert:
    post:
      operationId: upsertSession
      description: Upsert a Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionUpsertArgs"
  /session/delete:
    delete:
      operationId: deleteSession
      description: Delete one unique Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Session"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/deleteMany:
    delete:
      operationId: deleteManySession
      description: Delete Sessions matching the given condition
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/count:
    get:
      operationId: countSession
      description: Find a list of Session
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SessionCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/aggregate:
    get:
      operationId: aggregateSession
      description: Aggregate Sessions
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSession"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /session/groupBy:
    get:
      operationId: groupBySession
      description: Group Sessions by fields
      tags:
        - session
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SessionGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/create:
    post:
      operationId: createVerificationToken
      description: Create a new VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateArgs"
  /verificationToken/createMany:
    post:
      operationId: createManyVerificationToken
      description: Create several VerificationToken
      tags:
        - verificationToken
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenCreateManyArgs"
  /verificationToken/findUnique:
    get:
      operationId: findUniqueVerificationToken
      description: Find one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/findFirst:
    get:
      operationId: findFirstVerificationToken
      description: Find the first VerificationToken matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/findMany:
    get:
      operationId: findManyVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/update:
    patch:
      operationId: updateVerificationToken
      description: Update a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateArgs"
  /verificationToken/updateMany:
    patch:
      operationId: updateManyVerificationToken
      description: Update VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpdateManyArgs"
  /verificationToken/upsert:
    post:
      operationId: upsertVerificationToken
      description: Upsert a VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerificationTokenUpsertArgs"
  /verificationToken/delete:
    delete:
      operationId: deleteVerificationToken
      description: Delete one unique VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/VerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/deleteMany:
    delete:
      operationId: deleteManyVerificationToken
      description: Delete VerificationTokens matching the given condition
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/count:
    get:
      operationId: countVerificationToken
      description: Find a list of VerificationToken
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/VerificationTokenCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/aggregate:
    get:
      operationId: aggregateVerificationToken
      description: Aggregate VerificationTokens
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateVerificationToken"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /verificationToken/groupBy:
    get:
      operationId: groupByVerificationToken
      description: Group VerificationTokens by fields
      tags:
        - verificationToken
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/VerificationTokenGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerificationTokenGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/create:
    post:
      operationId: createOrganization
      description: Create a new Organization
      tags:
        - organization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateArgs"
  /organization/createMany:
    post:
      operationId: createManyOrganization
      description: Create several Organization
      tags:
        - organization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateManyArgs"
  /organization/findUnique:
    get:
      operationId: findUniqueOrganization
      description: Find one unique Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/findFirst:
    get:
      operationId: findFirstOrganization
      description: Find the first Organization matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/findMany:
    get:
      operationId: findManyOrganization
      description: Find a list of Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/update:
    patch:
      operationId: updateOrganization
      description: Update a Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateArgs"
  /organization/updateMany:
    patch:
      operationId: updateManyOrganization
      description: Update Organizations matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateManyArgs"
  /organization/upsert:
    post:
      operationId: upsertOrganization
      description: Upsert a Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpsertArgs"
  /organization/delete:
    delete:
      operationId: deleteOrganization
      description: Delete one unique Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/deleteMany:
    delete:
      operationId: deleteManyOrganization
      description: Delete Organizations matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/count:
    get:
      operationId: countOrganization
      description: Find a list of Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/aggregate:
    get:
      operationId: aggregateOrganization
      description: Aggregate Organizations
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/groupBy:
    get:
      operationId: groupByOrganization
      description: Group Organizations by fields
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/create:
    post:
      operationId: createUserOrganization
      description: Create a new UserOrganization
      tags:
        - userOrganization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganizationCreateArgs"
  /userOrganization/createMany:
    post:
      operationId: createManyUserOrganization
      description: Create several UserOrganization
      tags:
        - userOrganization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganizationCreateManyArgs"
  /userOrganization/findUnique:
    get:
      operationId: findUniqueUserOrganization
      description: Find one unique UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/findFirst:
    get:
      operationId: findFirstUserOrganization
      description: Find the first UserOrganization matching the given condition
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/findMany:
    get:
      operationId: findManyUserOrganization
      description: Find a list of UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/update:
    patch:
      operationId: updateUserOrganization
      description: Update a UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganizationUpdateArgs"
  /userOrganization/updateMany:
    patch:
      operationId: updateManyUserOrganization
      description: Update UserOrganizations matching the given condition
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganizationUpdateManyArgs"
  /userOrganization/upsert:
    post:
      operationId: upsertUserOrganization
      description: Upsert a UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganizationUpsertArgs"
  /userOrganization/delete:
    delete:
      operationId: deleteUserOrganization
      description: Delete one unique UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/UserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/deleteMany:
    delete:
      operationId: deleteManyUserOrganization
      description: Delete UserOrganizations matching the given condition
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/count:
    get:
      operationId: countUserOrganization
      description: Find a list of UserOrganization
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserOrganizationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/aggregate:
    get:
      operationId: aggregateUserOrganization
      description: Aggregate UserOrganizations
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUserOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /userOrganization/groupBy:
    get:
      operationId: groupByUserOrganization
      description: Group UserOrganizations by fields
      tags:
        - userOrganization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserOrganizationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganizationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/create:
    post:
      operationId: createProject
      description: Create a new Project
      tags:
        - project
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreateArgs"
  /project/createMany:
    post:
      operationId: createManyProject
      description: Create several Project
      tags:
        - project
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreateManyArgs"
  /project/findUnique:
    get:
      operationId: findUniqueProject
      description: Find one unique Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/findFirst:
    get:
      operationId: findFirstProject
      description: Find the first Project matching the given condition
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/findMany:
    get:
      operationId: findManyProject
      description: Find a list of Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/update:
    patch:
      operationId: updateProject
      description: Update a Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateArgs"
  /project/updateMany:
    patch:
      operationId: updateManyProject
      description: Update Projects matching the given condition
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateManyArgs"
  /project/upsert:
    post:
      operationId: upsertProject
      description: Upsert a Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpsertArgs"
  /project/delete:
    delete:
      operationId: deleteProject
      description: Delete one unique Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/deleteMany:
    delete:
      operationId: deleteManyProject
      description: Delete Projects matching the given condition
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/count:
    get:
      operationId: countProject
      description: Find a list of Project
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/aggregate:
    get:
      operationId: aggregateProject
      description: Aggregate Projects
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateProject"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/groupBy:
    get:
      operationId: groupByProject
      description: Group Projects by fields
      tags:
        - project
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/create:
    post:
      operationId: createAgent
      description: Create a new Agent
      tags:
        - agent
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentCreateArgs"
  /agent/createMany:
    post:
      operationId: createManyAgent
      description: Create several Agent
      tags:
        - agent
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentCreateManyArgs"
  /agent/findUnique:
    get:
      operationId: findUniqueAgent
      description: Find one unique Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/findFirst:
    get:
      operationId: findFirstAgent
      description: Find the first Agent matching the given condition
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/findMany:
    get:
      operationId: findManyAgent
      description: Find a list of Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/update:
    patch:
      operationId: updateAgent
      description: Update a Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpdateArgs"
  /agent/updateMany:
    patch:
      operationId: updateManyAgent
      description: Update Agents matching the given condition
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpdateManyArgs"
  /agent/upsert:
    post:
      operationId: upsertAgent
      description: Upsert a Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpsertArgs"
  /agent/delete:
    delete:
      operationId: deleteAgent
      description: Delete one unique Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/deleteMany:
    delete:
      operationId: deleteManyAgent
      description: Delete Agents matching the given condition
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/count:
    get:
      operationId: countAgent
      description: Find a list of Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AgentCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/aggregate:
    get:
      operationId: aggregateAgent
      description: Aggregate Agents
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAgent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/groupBy:
    get:
      operationId: groupByAgent
      description: Group Agents by fields
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AgentGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/create:
    post:
      operationId: createDatabase
      description: Create a new Database
      tags:
        - database
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseCreateArgs"
  /database/createMany:
    post:
      operationId: createManyDatabase
      description: Create several Database
      tags:
        - database
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseCreateManyArgs"
  /database/findUnique:
    get:
      operationId: findUniqueDatabase
      description: Find one unique Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/findFirst:
    get:
      operationId: findFirstDatabase
      description: Find the first Database matching the given condition
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/findMany:
    get:
      operationId: findManyDatabase
      description: Find a list of Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/update:
    patch:
      operationId: updateDatabase
      description: Update a Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseUpdateArgs"
  /database/updateMany:
    patch:
      operationId: updateManyDatabase
      description: Update Databases matching the given condition
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseUpdateManyArgs"
  /database/upsert:
    post:
      operationId: upsertDatabase
      description: Upsert a Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseUpsertArgs"
  /database/delete:
    delete:
      operationId: deleteDatabase
      description: Delete one unique Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Database"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/deleteMany:
    delete:
      operationId: deleteManyDatabase
      description: Delete Databases matching the given condition
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/count:
    get:
      operationId: countDatabase
      description: Find a list of Database
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/DatabaseCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/aggregate:
    get:
      operationId: aggregateDatabase
      description: Aggregate Databases
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateDatabase"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /database/groupBy:
    get:
      operationId: groupByDatabase
      description: Group Databases by fields
      tags:
        - database
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/DatabaseGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/create:
    post:
      operationId: createBackup
      description: Create a new Backup
      tags:
        - backup
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupCreateArgs"
  /backup/createMany:
    post:
      operationId: createManyBackup
      description: Create several Backup
      tags:
        - backup
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupCreateManyArgs"
  /backup/findUnique:
    get:
      operationId: findUniqueBackup
      description: Find one unique Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/findFirst:
    get:
      operationId: findFirstBackup
      description: Find the first Backup matching the given condition
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/findMany:
    get:
      operationId: findManyBackup
      description: Find a list of Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/update:
    patch:
      operationId: updateBackup
      description: Update a Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupUpdateArgs"
  /backup/updateMany:
    patch:
      operationId: updateManyBackup
      description: Update Backups matching the given condition
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupUpdateManyArgs"
  /backup/upsert:
    post:
      operationId: upsertBackup
      description: Upsert a Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BackupUpsertArgs"
  /backup/delete:
    delete:
      operationId: deleteBackup
      description: Delete one unique Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Backup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/deleteMany:
    delete:
      operationId: deleteManyBackup
      description: Delete Backups matching the given condition
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/count:
    get:
      operationId: countBackup
      description: Find a list of Backup
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/BackupCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/aggregate:
    get:
      operationId: aggregateBackup
      description: Aggregate Backups
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateBackup"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /backup/groupBy:
    get:
      operationId: groupByBackup
      description: Group Backups by fields
      tags:
        - backup
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/BackupGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BackupGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/create:
    post:
      operationId: createRestoration
      description: Create a new Restoration
      tags:
        - restoration
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorationCreateArgs"
  /restoration/createMany:
    post:
      operationId: createManyRestoration
      description: Create several Restoration
      tags:
        - restoration
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorationCreateManyArgs"
  /restoration/findUnique:
    get:
      operationId: findUniqueRestoration
      description: Find one unique Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/findFirst:
    get:
      operationId: findFirstRestoration
      description: Find the first Restoration matching the given condition
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/findMany:
    get:
      operationId: findManyRestoration
      description: Find a list of Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/update:
    patch:
      operationId: updateRestoration
      description: Update a Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorationUpdateArgs"
  /restoration/updateMany:
    patch:
      operationId: updateManyRestoration
      description: Update Restorations matching the given condition
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorationUpdateManyArgs"
  /restoration/upsert:
    post:
      operationId: upsertRestoration
      description: Upsert a Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestorationUpsertArgs"
  /restoration/delete:
    delete:
      operationId: deleteRestoration
      description: Delete one unique Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Restoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/deleteMany:
    delete:
      operationId: deleteManyRestoration
      description: Delete Restorations matching the given condition
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/count:
    get:
      operationId: countRestoration
      description: Find a list of Restoration
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/RestorationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/aggregate:
    get:
      operationId: aggregateRestoration
      description: Aggregate Restorations
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateRestoration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /restoration/groupBy:
    get:
      operationId: groupByRestoration
      description: Group Restorations by fields
      tags:
        - restoration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/RestorationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestorationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/create:
    post:
      operationId: createSettings
      description: Create a new Settings
      tags:
        - settings
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsCreateArgs"
  /settings/createMany:
    post:
      operationId: createManySettings
      description: Create several Settings
      tags:
        - settings
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsCreateManyArgs"
  /settings/findUnique:
    get:
      operationId: findUniqueSettings
      description: Find one unique Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/findFirst:
    get:
      operationId: findFirstSettings
      description: Find the first Settings matching the given condition
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/findMany:
    get:
      operationId: findManySettings
      description: Find a list of Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/update:
    patch:
      operationId: updateSettings
      description: Update a Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsUpdateArgs"
  /settings/updateMany:
    patch:
      operationId: updateManySettings
      description: Update Settingss matching the given condition
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsUpdateManyArgs"
  /settings/upsert:
    post:
      operationId: upsertSettings
      description: Upsert a Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SettingsUpsertArgs"
  /settings/delete:
    delete:
      operationId: deleteSettings
      description: Delete one unique Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Settings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/deleteMany:
    delete:
      operationId: deleteManySettings
      description: Delete Settingss matching the given condition
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/count:
    get:
      operationId: countSettings
      description: Find a list of Settings
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/SettingsCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/aggregate:
    get:
      operationId: aggregateSettings
      description: Aggregate Settingss
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateSettings"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /settings/groupBy:
    get:
      operationId: groupBySettings
      description: Group Settingss by fields
      tags:
        - settings
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/SettingsGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettingsGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
